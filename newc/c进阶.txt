c指针+c数组+c字符串+结构体+c常量+预处理

c语言中的其他数据类型--数组以及字符串：
    数组：
        1：数组：
            数据的集合称为数组，数组中的每一个值称为数组元素，数组中值的个数称为数组的长度！
            数组长度的计算： length = sizeof(数组名)/sizeof(数组元素数据类型)；
        2：数组的声明：
            数组的使用同样需要先声明后使用；
            数组声明的方式：数据类型 数组名[数组长度]；
            数组的声明包括需要声明数组中所要存储的数据元素的类型，数组名以及数组的长度；
            数组声明完成之后，系统将会为数组分配内存空间，但是并不会对数组进行初始化，因此数组声明完成之后如果未进行赋值，数组元素的值是不确定的；
        3：数组的赋值：
            1：数组可以在声明的同时进行赋值；此时有两种赋值方式：
                1：完全赋值：即按照所声明的数组长度，填入相同个数的值；
                                如：int arr[3] = {1,2,3}
                            备注：完全赋值时数组可以不用显式指定长度；
                                如：int arr[] = {1,2,3}
                2：不完全赋值：赋值的个数少于数组声明时指定的个数；
                                如：int arr[3] = {1}
                            备注：不完全赋值时，数组未赋值的部分也会按照基本规则进行初始化：
                                1：如果数组类型为：int,short,long,将直接赋值为整数0；
                                2：如果数组类型为：char,将赋值为\0；
                                3：如果数组类型为：float或者double，则将会赋值为0.0；
            2：数组可以在声明完成之后赋值：
                数组在声明完成之后赋值将只能通过下标一个一个赋值，不能再使用{}进行赋值；
        4：数组使用的注意事项：
            1：数组在赋值时只能赋值指定数据类型的值，不能赋值其他数据类型的值；
            2：数组中元素的长度不能超过数组声明时指定的长度；
            3：c语言中的数组是静态数组，即长度一旦固定将不能改变，不能随意插入数据，也不能随意删除数据；
            4：固定长度的数组是在编译期间分配内存的；
        5：二维数组：
            二维数组的声明：
                数据类型  数组名[一维长度][二维长度];
            二维数组的本质：
                二维数组本质上类似于一个矩阵：一维长度指的是矩阵的行数；
                                            二维长度指的是矩阵的列数；
            二维数组的理解：
                二维数组可以理解为一维数组，只不过每一个元素的值又指向一个数组
            二维数组的赋值：
                1：分段赋值：
                    1：完全赋值：每一行都完全赋值；
                    2：部分赋值：默认从左向右赋值，其余则按照数据类型填充；
                2：连续赋值：
                    1：完全赋值：从左向右按行赋值；此时可不必给出一维长度；
                    2：部分赋值：从左向右按行赋值；其余则按照数据类型填充；
        6：数组的基本操作：
            取值：数组名[下标]
            赋值：数组名[下标] = 值

    字符串：