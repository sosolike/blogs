python中的输入输出函数：
输出函数：
    print(var);
        1：可以打印变量信息，无论数据是何种类型，都可以直接输出；
        2：print中的 , 会被转换成空格；
        3：默认换行；
        4：格式化输出：
            print("some info %s some info %s " % (var,vart)):
                前面的%xxx是需要转换的格式；第一个%xxx对应 % 后面括号中的第一个字符，一次类推
                此时会将后面的变量转换为前面指定的格式嵌入到前面字符串中输出；
            格式化标准：
                d,i                 带符号的十进制整数
                o                   不带符号的八进制
                u                   不带符号的十进制
                x                    不带符号的十六进制（小写）
                X                   不带符号的十六进制（大写）
                e                   科学计数法表示的浮点数（小写）
                E                   科学计数法表示的浮点数（大写）
                f,F                 十进制浮点数
                g                   如果指数大于-4或者小于精度值则和e相同，其他情况和f相同
                G                  如果指数大于-4或者小于精度值则和E相同，其他情况和F相同
                C                  单字符（接受整数或者单字符字符串）
                r                    字符串（使用repr转换任意python对象)
                s                   字符串（使用str转换任意python对象）
                .                   如10.3；.号前面是字宽，后面是精度，用于转换浮点数
    格式化函数：
        str(var)：
            1：返回一个用户易读的表达形式；
            2：一般是将数值转换为字符串
        repr(var):
            1：返回一个解释器易读的表达形式：
            2：一般用来将对象转换为字符串
        format:
            1：基本替换：'{}test "{}test"'.format('a', 'b'):atest btest
            2：指定位置替换：'{0}test "{1}test"'.format('a', 'b'):atest btest
            3：指定名称替换：'{one}test "{two}test"'.format(one='a',two='b'):atest btest
            4：'!s' (使用 str()) 和 '!r' (使用 repr()) 可以用于在格式化某个值之前对其进行转化：
                '常量 PI 的值近似为：{!r}'.format(math.pi)
            5： ':' 和格式标识符可以跟着字段名可以实现更多的转换：
                '常量 PI 的值近似为 {0:.3f}。'.format(math.pi)
            6：format函数转换之后只能返回，不能输出；
    输入函数：
        input();
            1：从标准输入中读取一行文本并返回；


    

    
    
            