python常见的两种错误：
    语法错误：解释器分析期间发现，并抛出错误信息
    异常：程序执行期间发现，并抛出错误信息

错误处理方式：
    默认情况下：解释器会将错误信息打印至控制台；
    捕获错误信息语法：try...except...finally
    基本使用方式：
        try:
            code...
        except error as e:
            code...
        finally:
            code...
    执行流程：
        1：try语句块包含正常需要被执行的代码
        2：如果发生错误将会进入except语句块，执行其中的代码
        3：不管是否发生异常，只要有finally语句块，则继续执行finally语句块；一般用于执行关闭资源的操作
        4：还可以在except后面加一个else,当没有异常被捕获时执行其中的代码：
        5：except可以跨越多层调用；即只需要在合适的层次捕获错误即可，无需在错误发生源头捕获；
        6：如果错误没有被捕获，就会一直往上一级调用层抛，一直到python解释器，打印一个错误信息；
        7：由于错误类型有多种，因此可以使用多个except来捕获错误；
        8：由上至下，except捕获的错误类型范围应该逐渐增大；否则后面的异常会导致永远无法捕获；
        9：python中的错误均是class；且所有错误类均继承自BaseException;
        10：except捕获到的则是一个错误对象；
        11：预定义的清理行为可以使用with:使用了with语句之后，资源总会正常关闭；
        12：如果except捕获了错误，但是不知道如何处理，则可以使用raise吧错误原样抛出给上层处理；
自定义错误类型：
    主动抛出异常：python使用raise语句抛出一个指定的异常信息；raise唯一的一个参数是要被抛出的异常，必须是一个异常的实例或者是异常的类；
    raise Exception(exception_info)
    自定义异常类：
        要求：
            1：自定义异常类必须继承自Exception，可以直接继承或者间接继承；
            2：当创建一个模块有可能抛出多种不同的异常时，一种通常的做法是为这个包建立一个基础异常类，然后基于这个基础类为不同的错误情况创建不同的子类:
            



    

    
    