基本语法规范：
    1：语句不需要用 ; 作为语句结束符；也不使用其他任何符号作为语句结束符；原则上一行就是一条语句，语句尽量避免手动换行！
    2：代码块不使用 {} 包裹，而是通过相同的缩进来确认同一段代码块；也就是说同一个代码块中的代码缩进必须保持一致；
    3：空行不是python的语法要求，但是在代码中合理使用空行可以提高代码的阅读性；
    4：注释：
        单行注释：#;
        多行注释：'''注释''',"""注释""";
    5：标识符命名规则：
        1：由数字、字母、下划线组成;
        2：不能以数字开头；
        2：不能和关键字冲突；
        3：标识符严格区分大小写；
        4：要具备可读性；
        5：不推荐使用_或者__作为标识符命名前缀；
注释规范：
    1：python中的注释包含两个方面：文档字符串和代码注释
        1.1：文档字符串是指：在包、模块、类、函数/方法中使用"""文档字符串"""("""包裹起来的字符串)的方式对对应内容进行介绍；
        1.2：代码注释是指：对某一行代码的意义进行描述，帮助阅读代码；
    2：文档字符串：
        通过在包、模块、类、函数/方法中使用"""包裹字符串的方式，来对对应的内容加以说明，帮助更换的阅读使用代码；文档字符串应对遵守以下规范：
        2.1：文档字符串可以使用在包、模块、类、函数/方法中；
        2.2：在函数/方法中使用文档字符串：
            1：理论上每一个函数/方法都应该包含文档字符串来对函数/方法加以说明，除非该函数/方法有以下特征可以省略：
                1：外部不可见
                2：非常短小
                3：逻辑简单明了
            2：文档字符串应该出现在函数/方法的第一行；
            3：文档字符串的结构：
                1：文档字符串第一行应该描述一下该函数/方法的功能，即该函数/方法可以完成什么功能；不用单独缩进两个空格，和函数/方法中的代码块缩进一致，并且以。或者！结尾；
                2：描述函数的其他项目：参数，返回值，异常
                    2.1：每一个项目都要和上一个项目使用空行隔开，如果上一个项目是函数/方法的描述，也要使用空行隔开；并且项目要带上项目名；
                    2.2：项目名不用单独缩进两个空格，和函数/方法中的代码块缩进一致，直接书写，并且以:结尾，分别为：
                        函数/方法需要传入的参数-Args
                        函数/方法的返回值-Returns，如果是生成器则使用Yields
                        函数/方法内可能抛出的异常-Raises
                    2.3：项目内容需要另起一行，并且缩进两个空格开始书写；
                        Args:添加参数描述
                            需要另起一行添加详细内容，列出每一个参数的名字，并使用:和空格添加对该参数的描述，如果描述超过两行，超出的行同样需要使用缩进两个空格或者四个空格悬挂缩进；描述应该包含参数的类型以及含义；
                        Returns/Yields:添加返回值描述
                            需要另起一行添加详细内容，描述返回值的类型以及含义，如果函数没有返回值，该项可以省略；
                        Raises：添加异常描述
                            需要另起一行添加详细内容，需要列出该函数/方法可能抛出的异常以及抛出异常时的情况
                    2.4：示例：
                        def save_user_info(name,age):
                            """该函数存储用户姓名及年龄,并返回存储结果。
                            
                            Args: 
                                name: 用户姓名，必填参数，只能为字符串。
                                age: 用户年龄，必填参数，只能为数字，大于0且小于150。
                            
                            Returs:
                                如果保存成功返回1，如果保存失败返回0。
                            
                            Raises:
                                IOError:数据库连接失败时将会抛出IOError异常。
                            """
        2.3：在类中使用文档字符串为类添加说明:
            1:在类的第一行应该添加一个文档字符串，用来对类进行整体性描述，不需要单独缩进两个空格，和类中代码块缩进一致，并且以。或者！结尾。
            2:如果类中有公共属性(静态属性/实例属性),应该使用Attributes来为公共属性添加说明：Attribute应该和上述对类的描述通过空行隔开，不用缩进两个空格，并且以:结尾；
            3：示例:
                class ExampleClass(object):
                    """该类是测试基类，用来提供基本测试方法。

                    Attributes: 
                        code: 该属性表示测试结果，1：表示测试成功，0表示测试失败
                        id: 该属性表示测试用例id,整数；
    3：基本代码语句注释：
        1.1:代码的解释性注释应该使用#来注释，如果是单行即使用 # 注释内容，如果是多行注释应该在每一行使用 # 注释内容;
        1.2：对于比较复杂的代码块应该在代码块开始时使用 # 来添加注释。
            如：
                #如果i=0那么打印i=0
                #如果i!=0那么打印i!=0
                if i==0:
                    print 'i=0'
                else:
                    print 'i!=0'
        1.3：对于单行代码添加解释性注释，应该在代码尾部使用 # 来添加注释，并且#和代码至少间隔两个空格；
            如：
                print time.time()  #打印当前时间戳