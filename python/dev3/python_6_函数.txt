python函数：
    1：函数的定义方式：
        def 函数名称(形参列表):
            函数体
    
        函数定义中的规范：
            1：函数需要使用def关键字来定义；
            2：函数名称应该遵守python标识符命名规范；
            3：python中的函数体不使用 {} 来包裹，而是通过相同的 缩进 来确认同一个函数体；
            4：除非函数本身功能、代码、结构简单以外，函数内部应当使用文档字符串进行描述；
            5：函数在python中属于一等对象，函数之间应当使用两个空行来分隔开，以保证可阅读性；
    
    2：函数的形参列表：
        python中支持5中类型的参数：必选参数、默认参数、可变参数、关键字参数、限制性关键字参数；
        1：必选参数：
            声明方式：函数中声明了形参，但是没有给定默认值，在调用函数时，就必须按照函数名称/顺序给出实参数据：func_name(arg1,arg2)

            传参方式：1：按照顺序传入实参：func_name(1,2)
                     2：按照参数名称传入实参：func_name(arg1=1,arg2=2)

            注意事项：函数调用时必须传入实参数据，实参数据将会按照顺序/名称赋值给形参；形参的数据是实参的副本，而非实参本身；
        
        2：默认参数：
            声明方式：函数中声明了形参，且给定了默认值，在调用函数时，可以不用给定实参数据，函数将会使用默认值：func_name(arg1,arg2=2)

            传参方式：1：按照顺序传入实参：func_name(1,3)：arg1=1，arg2=3 或者 func_name(1)：arg1=1,arg2=2
                     2：按照名称传入实参：func_name(arg1=1,arg2=3)：arg1=1，arg2=3 或者 func_name(arg1=1)：arg1=1,arg2=2

            注意事项：1：默认参数之后不允许再有必选参数；
                     2：默认参数是在解释器读完函数内容之后就完成的初始化，并且默认参数的值将会存储在函数对象的__defaults__属性中；
                     3：在函数调用时未给定默认参数值，且函数内部没有给默认参数重新赋值时，函数内部将会自动使用__defaults__的值，并且在函数内部修改了该形参的值，那么后续调用函数将会直接使用该形参修改之后的值；
                     4：基于3，以及python中的可变对象和不可变对象的原因，应当避免使用可变对象作为函数形参；
        
        3：可变参数：
            声明方式：函数中可以通过一个参数接收多个实参，这种参数称之为可变参数：func_name(arg1,*arg2)

            传参方式：1：按照名称传参：func_name(arg1=1,2,3,4) :arg1=1，arg2=(2,3,4)
                     2：按照顺序传参：func_name(1,2,3,4) :arg1=1，arg2=(2,3,4)
                     3：对于可变参数本身，可以直接使用list或者tuple传入：func_name(1,*[2,3,4]) 或者func_name(1,*(2,3,4))
            
            注意事项：1：可变参数只能放置在必选参数和默认参数之后
                     2：可变参数存在的目的在于使用一个参数接收多个实参，并且会将实参按传入顺序存放在tuple中；
                     3：使用可变参数接收list类型实参和直接使用必选/默认参数接收list类型的实参具有根本的不同：
                        使用可变参数接收list类型的实参，可变参数的值仅为实参的副本，其内存地址不同，是实参的一份拷贝；对关键字参数做出修改并不会影响外部实参的值；并且函数接收到的数据会保存在tuple中，可以防止函数中误改型参值；
                        使用必选参数或者默认参数接收list类型的实参，此时向函数传递的是实参的引用，即必选/默认参数和实参指向同一个list;在函数内部对list的值做出修改将会影响外部的实参；
                    4：基于第3条，建议使用可变参数的方式接收list类型的实参；而非直接使用必选参数或者默认参数接收list类型的形参；
        
        4：关键字参数：
            声明方式：关键字参数用来接收dict类型实参的键值对：func_name(arg1,**arg2)

            传参方式：1：按照名称传参：func_name(arg1=1,**{'key1':value})
                     2：按照顺序传参：func_name(1,**{'key1':value})

            注意事项：1：关键字参数只能放置在必选参数、默认参数、可变参数之后；
                     2：使用关键字参数接收dict类型实参和直接使用必选/默认参数接收dict类型的实参具有根本的不同：
                        使用关键字参数接收dict类型的实参，关键字参数的值仅为实参的副本，其内存地址不同，是实参的一份拷贝；对关键字参数做出修改并不会影响外部实参的值；
                        使用必选参数或者默认参数接收dict类型的实参，此时向函数传递的是实参的引用，即必选/默认参数和实参指向同一个dict;在函数内部对dict的值做出修改将会影响外部的实参；
                     3：基于第2条的原因，建议使用关键字参数接收dict类型的实参，而非直接使用必选参数或者默认参数接收dict类型的形参；
        
        5：命名关键字参数：
            声明方式：命名关键字参数用来明确的表示，向命名关键字参数传参时必须指定命名关键字参数的名字；func_name(arg1,*,arg2)

            传参方式：1：按照名称传参：func_name(arg1=1,arg2=2)
                     2：按顺序传参：func_name(1,arg2=2)
            
            注意事项：1：命名关键字参数之前必须使用*隔开，且*之后的都将被认为是命名关键字参数；