PHP命名空间：
    1：php的命名空间是在语法层面上构建一种虚拟空间：用于分隔代码的边界，进行代码的'封装';但是命名空间也只对类，函数，常量进行'封装';

    2：php的命名空间同时也旨在解决一下几个问题：
        1：命名空间可以解决不同代码块之间或者代码与第三方函数名，类名，常量名的冲突；
        2：对于前缀过长的类名，常量名，函数名通过命名空间可以减少名称的长度，提高代码的可读性；
        3：方便对代码在语义上进行分类及管理，方便代码的查找及维护；
    
    3：命名空间的声明：
        1：命名空间使用 namespace 关键字来声明；
        2：命名空间需要在文件顶部声明，即namespace命名空间声明之前不允许有任何非命名空间声明代码，包括空格(除过declare关键字)；
        3：同一个php脚本文件中可以声明多个命名空间；
        4：以PHP或者php为命名空间的名称应该禁止使用，包含php关键字的命名空间为预留关键字，不应使用；
        5：命名空间的类型：
            全局命名空间：  
                1：如果不声明命名空间，那么代码则存在于全局命名空间；
                2：也可以使用一个不带名称的namespace来声明全局空间：如：namespace {/* 全局命名空间 */}
                3：如果子级命名空间需要使用到全局命名空间中的类，函数，常量；那么这些函数，类，常量必须放在全局命名空间中；
                4：\ 代表全局命名空间，在子级命名空间中需要调用全局命名空间中的内容时需要使用\来调用，否则当子级命名空间中有和全局空间同名函数，类，常量时，将会优先调用子级命名空间中的内容；
            
            子级命名空间：
                1：namespace 命名空间名称;
                    备注：通过此种命名空间的方式声明命名空间，那么该命名空间声明语句以下的类，函数，常量均属于该命名空间；

                2：namespace 命名空间名称{}
                    备注：通过此种方式声明命名空间，那么该命名空间大括号中的类，函数，常量均属于该命名空间；
                        如果使用的是此种语法来声明命名空间，那么 '{}' 之外不允许有任何php代码；

                3：子级命名空间允许嵌套，即使用 '\' 的方式来嵌套多个命名空间作为当前代码的命名空间；如：namespace NS1\NS2\NS3；命名空间和文件所处的目录路径概念非常相似，同样，在实际项目中，命名空间也常常和文件所处的路径保持一致；方便对代码的管理和查看以及自动引入；
            
            
        6：命名空间的声明方式：
            在一个php脚本文件中声明一个命名空间：
                1：在一个脚本中声明一个命名空间，当前脚本中的函数，类，常量均属于该命名空间；

            在同一个文件中声明多个命名空间：
                1：同一个文件中可以使用多个namespace来声明多个命名空间；
                2：同一个文件中声明多个命名空间可以使用两种子级命名空间的声明语法，但是优先推荐使用第二种(大括号语法模式)；
                3：另外，尽量避免在同一个文件中声明多个命名空间；而是采用组合的方式，将不同命名空间的代码组合在一起；
    4：命名空间的使用：
        1：命名空间中的函数，类，常量只能够在当前命名空间中访问，无法在其他命名空间中访问；如有需要，则需要先引入该命名空间；引入方式有三种：非限定名称，限定名称，完全限定名称：
        2：引入可以使用use关键字引入；即 use NS1\NS2\NS3\类名(函数名，常量名)；
        3：use 导入命名空间的语句必须在顶级作用域，不能在块级作用域，因为命名空间中的类，函数，常量的导入是在编译器进行的，而非运行期；
        4：在php7中，可以使用use语句一次导入同属一个命名空间下的多个类，函数，常量；如：use some\namespace\{ClassA, ClassB, ClassC as C};


        非限定名称：在访问命名空间中的类，函数，常量不带有命名空间的访问方式，称为非限定名称的方式；
                    1：如果使用use 通过命名空间完全引入php脚本文件中的类，函数，常量，那么就可以使用非限定名称的方式；
                    2：如果被使用的类，函数，常量就在当前命名空间下，在使用时即可使用非限定名称的方式；

        限定名称：在访问命名空间中的类，函数，常量带有命名空间，但是命名空间并非从根命名空间开始的访问方式，称之为限定名称；
                    1：如果目标php脚本文件中类，函数，常量所处的命名空间时当前命名空间的子级命名空间，即可使用限定名称的方式访问；如：当前脚本命名空间是：Blog,而需要引入的目标类命名空间是 'Blog\Upload'，那么在使用时即可从 'Upload' 开始访问类名；
 
        完全限定名称：在访问命名空间中的类，函数，常量带有命名空间，且命名空间从根命名空间开始的访问方式，称之为完全限定名称；
    
    5：命名空间的别名：
        命名空间可以使用 'AS' 关键字来创建别名；AS 关键字可以用在使用 use 导入指定命名空间的地方，为导入的类，函数，常量，以及命名空间创建别名；

    6：namespace关键字和__NAMESPACE__常量：
        __NAMESPACE__常量代表当前命名空间名称的字符串，在全局的非命名空间代码中，该值是一个空字符串；


        
    
        

