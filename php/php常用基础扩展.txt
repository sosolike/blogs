1:日期时间扩展
    date('format_str',time);
        功能：格式化日期时间time;如果time为空，则获取当前时间并进行格式化；
        格式化参数：
                Y/y:四位年数，两位年数；
                M/m:月份的缩写；有前导零的月份
                D/d/j:星期中的第几天，有前导零的天,无前导零月份的第几天；
                g/h:有/无前导零12小时制；
                G/H:有/无前导零24小时制；
                i:有前导零的分钟数；
                s：有前导零的秒数；
        eg：date("Y-m-d H:i:s",time());
            date("Y-m-d H:i:s);
    strtotime("english_time_str"):
        功能：将英文时间转换为时间戳；
        eg：将英文时间转换为时间戳：
                strtotime("now");strtotime("last sunday");
            获取未来的某个时间：
                strtotime("+2 year");
                strtotime("+2 month");
                strtotime("+2 day");
                strtotime("+2 hours");
                strtotime("+2 minutes");
                strtotime("+2 seconds");
                strtotime("+2 week");
            获取以前的时间：
                strtotime("-2 year");
                strtotime("-2 month");
                strtotime("-2 day");
                strtotime("-2 hours");
                strtotime("-2 minutes");
                strtotime("-2 seconds");
                strtotime("-2 week");
    time();
        功能：获取当前时间的unix时间戳；
    microtime();
        功能：获取当前时间的微秒时间戳；以秒为单位的小数；、
    getdate($time);
        功能：获取时间戳$time的时间信息；返回一个数组；
    mktime(int hour,int minutes,int seconds,int month,int day,int year);
        功能：根据给定的时间创建一个事件戳；
    date_default_timezone_set
        功能：设置系统时间基准
    date_default_timezone_get
        功能：获取当前系统时间基准；
2：数学计算扩展：
    ceil()：向上取整；
    floor()：向下取整；
    round()：四舍五入；
    rand()：生成随机数（整数）
    mt_rand()：生成随机数（整数）和生成指定范围的随机数；
    lcg_value()：生成随机小数；

    max()；求最大值；
    min()：求最小值
    base_convert();进制之间转换
    abs();求绝对值

    sin()：求正弦
    cos()：求余弦
    tan()：求正切

    sqrt()：求平方根
    pow()：求指数：pow(a,b)
    pi()：值为3.1415926
    fmod()：求余数
    exp()：求e的指数；
3：php缓冲区操作：
    使用php缓冲区和不使用php缓冲区的区别：
        使用php缓冲区：php的输出命令-->php缓存区域-->web服务器缓存--->浏览器缓存区域-->浏览器屏幕；
        不使用php缓冲区：php的输出命令-->web服务器缓存--->浏览器缓存区域-->浏览器屏幕；此时将不会再通过php缓存区域；
    php缓存区域的使用：
        1：在php.ini中配置缓存的参数:
            output_buffering = on;打开一个不限制大小的缓冲区域
            output_buffering = 4096;打开一个4096字节的缓冲区域；
            output_buffering = off;关闭php缓冲区域；
        2：代码中操作缓冲区域
            ob_start();打开缓冲区域； 
            ob_end_clean();关闭缓冲区域； 并清空缓冲区域的内容，（是删除，不是刷新输出）；
            ob_end_flush();关闭缓冲区域，并刷新缓冲区域的内容；
        3：操作缓冲区域的内容：
            ob_get_clean();获取并清空缓冲区域的内容
            ob_get_flush();获取并刷新缓冲区域的内容
            ob_get_contents();获取缓冲区域的内容，仅仅只是拷贝一份；对缓冲区域没影响；
            ob_get_length();获取缓冲区域内容长度，是缓冲区域实际存储内容的长度，而非php配置文件中的长度；
4：php操作json:
    1：json_encode()
        功能：将数组或者对象转换为json字符串；
        备注：
            1：对于数组：要求数组必须是关联数组，
            2：对于对象：只能转换访问权限是public的示例属性；其他权限的属性以及静态属性均不能转换；
            3：要避免转换索引数组；
    2：拼装json字符串：
        '{"name":"value","age":age}'
            备注：外面一定要是用单引号，内部使用双引号；
    3：json_decode($json,$true_or_false);
        功能：将json字符串解析为数组或者对象；
        参数：第一个参数为需要解析的json字符串，第二个参数如果是true则解析为数组，如果不填或者为false,则解析为对象；
        解析之后对于数据的访问：
            标量值直接根据键名访问；
            数组或者对象则根据键名获取数组及对象；
    4：输出json字符串：
        header("Content-type:application/json;charset=utf-8");
        exit(json_encode($arr/$obj));
5：
    
