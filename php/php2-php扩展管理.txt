php扩展：
    php允许通过c/c++添加扩展，可以让php具备更丰富的功能；
    php添加依赖的方式有两种：
        1：手动添加
        2：通过composer依赖管理器添加
    composer是管理php项目中的依赖的工具，而非是管理php本身扩展的工具；
手动添加php依赖
    1：手动下载指定版本php依赖包
    2：引入php依赖包至项目
    优缺点：
      需要手动寻找指定版本的php依赖包
      需要开发者维护依赖包的安装位置，使用等；
      如果遇到项目迁移，升级，则有需要手动查找项目中使用到的依赖包，下载安装，引入；繁琐复杂，容易出错；
通过composer依赖管理器来管理项目中需要用到的php依赖扩展：
    1：composer是一个依赖管理器，包含了众多php依赖包，也可以自行上传自己创建的库，通过composer来管理依赖的迭代发布；
    2：通过composer来安装项目需要的php依赖有以下几个优势：
        1：安装简单方便，只需指定依赖的包名，项目名，版本号即可安装；
        2：composer集中管理php项目所需要用到的所有依赖；在项目迁移时也可以很方便的立即安装各个需要的依赖；
        3：composer通过composer.json来管理composer安装的依赖扩展，结构简单清晰；
        4：composer统一管理php依赖安装位置和使用方式；
    3：composer的安装：
        1：composer需要phar扩展，因此在编译安装php的时候需要去掉--disable-phar ,并且需要安装--with-openssl
        2：curl -sS https://getcomposer.org/installer | /usr/local/php/bin/php -- --install-dir=/usr/local/composer 将composer安装在指定位置
         或者：curl -sS https://getcomposer.org/installer | /usr/local/php/bin/php
              mv composer.phar /usr/local/bin/composer   全局安装

    4：通过composer安装php项目所需要的扩展：
        1:现在需要安装项目的目录中添加composer.json文件，并配置需要安装的项目及版本；
        2:php composer.phar install
        3：在php文件中引入vendor中的autoload.php文件
        4：通过 use PackageName\ClassName来导入需要使用的扩展

    



    


    