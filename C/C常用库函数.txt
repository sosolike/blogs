ctype.h：字符操作函数头文件
    相关操作函数--检查操作：
        isalpha(int c)
            功能：检查是否是以下字母：
                { a b c d e f g h i j k l m n o p q r s t u v w x y z } 
                {A B C D E F G H I J K L M N O P Q R S T U V W X Y Z }
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；
        isalnum(int c)
            功能：检查是否是以下字母或者数字：
                { a b c d e f g h i j k l m n o p q r s t u v w x y z } 
                {A B C D E F G H I J K L M N O P Q R S T U V W X Y Z }
                {0,1,2,3,4,5,6,7,8,9}
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；
        isdigit(int c)
            功能：检查是否是数字：
                {0,1,2,3,4,5,6,7,8,9}
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；
        islower(int c)
            功能：检查是否是小写字母：
                { a b c d e f g h i j k l m n o p q r s t u v w x y z } 
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；
        isupper(int c)
            功能：检查是否是大写字母：
                {A B C D E F G H I J K L M N O P Q R S T U V W X Y Z }
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；
        isspace(int c)
            功能：检查是否是空格字符：
                {"" \t \r \n \v \f}
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；
        iscntrl(int c)
            功能：检查是否是ASCII控制码，即判断字符的范围是否在0~30之间：
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；
        isascii(int c)
            功能：检查是否是ASCII字符，即判断字符的范围是否在0~127之间：
            参数：c:待检测字符，类型会被提升至int；
            返回值：字符合法返回非0值，否则返回0；

    相关操作函数--转换操作：
        toupper(int c)
            功能：将字符c转换为大写
            参数：c:待检测字符，类型会被提升至int；
            返回值：返回字符对应的ASCII编码
        tolower(int c)
            功能：将字符c转换为小写
            参数：c:待检测字符，类型会被提升至int；
            返回值：返回字符对应的ASCII编码


math.h:数学计算处理：
        float fabs(float x)
            功能：求浮点数x的绝对值
            参数：浮点数x
            返回值：返回浮点数x的绝对值

        int abs(int x)
            功能：求整数x的绝对值
            参数：整数x
            返回值：返回整数x的绝对值

        int ceil(float x)
            功能：对浮点数x向上取整
            参数：浮点数x
            返回值：返回整数x向上取整之后的值

        int floor(float x)
            功能：对浮点数x向下取整
            参数：浮点数x
            返回值：返回整数x向下取整之后的值

        float fmod(float x,float y)
            功能：计算x/y的余数
            参数：浮点数x，浮点数y
            返回值：返回x/y的余数

        float modf(float num,float *i)
            功能：将浮点数num分解成整数部分和小数部分
            参数：num:待分割的浮点数，i指针，指向浮点数分割之后整数的地址；
            返回值：返回小数部分，并将整数部分存入*i所指内存中；

        float pow(float x,float y)
            功能：计算x的y次幂；
            参数：浮点数x，浮点数y
            返回值：x的y次幂

        float sqrt(float x)
            功能：计算x的平方根；
            参数：浮点数x
            返回值：x的平方根

    随机数：需要用到stdlib.h
        1：先使用srand()播种；srand((unsigned)time(NULL));
        2：使用rand获取随机数：rand();返回值类型：int
        3：获取指定范围的随机数：rand () % (upper - lower + 1) + lower ;  
        4：使用时间作为种子时需要包含time.h头文件



string.h:字符串处理
    字符串基本处理函数：string.h
    复制类：
        1:复制字符串：
            strcpy(char destination[], const char source[]); 
                功能：复制字符串；
                说明：将字符串source拷贝至destination中；对于目标字符串的声明长度无要求！
                备注：目标字符串必须是字符数组；
                返回值：无返回值，源字符串的内容会覆盖掉目标字符串之前的内容！

        2：拷贝指定字符到目标字符串：
            strncpy(char destination[],const char source[],int numbers);
                功能：将指定个数的字符从源字符串复制到目标字符串！
                说明：该函数对于目标字符串的声明长度是有要求的，如果待复制字符超过目标字符串长度，\0将没有地方添加！
                备注：目标字符串必须是字符数组；
                返回值：无返回值，源字符串的内容会覆盖掉目标字符串之前的内容！

        3：将字符串的前n个字节拷贝到目标字符串中
            extern void bcopy(const void *src, void *dest, int n);
            功能：将字符串src的前n个字节复制到dest中
            说明：bcopy不检查字符串中的空字节NULL，
            返回值：函数没有返回值。
        
    连接类：
        4：连接两个字符串：
            strcat(char target[],const char source[])
                功能：将字符串source连接到字符串target后面；
                备注：目标字符串必须是字符数组；
                返回值：无返回值，源字符串的内容连接到目标字符串后面会作为新的目标字符串的内容！

        5：将源字符串前n个字符连接到目标字符串：
            strncat(char target[],const char source[],int numbers)
                功能：将字符串source连接到字符串target后面；
                备注：对于s4和s5代表的是字符串常量，无法作为目标字符串！
                返回值：无返回值，源字符串的内容连接到目标字符串后面会作为新的目标字符串的内容！
    比较类：
        6：比较两个字符串：
            int strcmp(const char firststring[],const char secondstring)
                功能：区分大小写比较两个字符串;
                返回值：如果返回0，则说明两个字符串内容相同；
                    如果返回值>0,则说明firststring大于secondstring;
                    如果返回值<0,则说明firststring小于secondstring;

        7：忽略大小比较两个字符串：
            int strcasecmp(const char firststring[],const char secondstring)
                功能：忽略大小写比较两个字符串;
                返回值：如果返回0，则说明两个字符串内容相同；
                    如果返回值>0,则说明firststring大于secondstring;
                    如果返回值<0,则说明firststring小于secondstring;

        8：比较两个字符串前n个字节是否相等
            extern int bcmp(const void *s1, const void *s2, int n);
            功能：比较字符串s1和s2的前n个字节是否相等
            返回值：如果为0，则相等，如果不为0则不相等；

        9：int strncmp(const char *str1, const char *str2, size_t n)
            功能：比较字符串s1和s2的前n个字节是否相等
            返回值：如果为0，则相等，如果不为0则不相等；

    获取字符串长度：
        8：获取字符串长度：
            1：strlen:获取字符串真实字符个数，(不包括声明但未初始化的部分，不包括\0)；
            2：sizeof:获取字符数组的长度，该函数在char *str这种声明方式中不可用；
            
    查找指定字符：
        9：在字符串查找指定字符：
            char *strchr(const char *string, int c); 
                功能：正向查找目标字符在字符串中的首次出现的位置
                返回值：该函数返回一个指针，指向所找到的目标字符的内存中的位置；如果没有找到则返回NULL；
            char *strrchr(const char *string, int c);
                功能：反向查找目标字符在字符串中的首次出现的位置
                返回值：该函数返回一个指针，指向所找到的目标字符的内存中的位置；如果没有找到则返回NULL；
            char *strstr(const char *string, const char *strSearch)：
                功能：在目标字符串中查找子串
                返回值：返回字符串首次出现的位置的指针，如果没有找到则返回NULL；
    转换大小写：
        将字符串转换为大写：
            extern char *strupr(char *s);
                功能：将字符串转换为大写的形式；
                返回值：返回指向s的指针；
        将字符串转换为小写：
             extern char *strlwr(char *s);   
                功能：将字符串s转换为小写形式
                返回值：返回指向s的指针。
    逆转类：
        extern char *strrev(char *s);
            功能：将字符串顺序颠倒过来；
            返回值：返回指向颠倒顺序后的字符串指针；
    分解：
        extern char *strtok(char *s, char *delim);
        功能：分解字符串为一组标记串，s为要分解的字符串，delim为分割字符串；
        说明：首次调用时，s必须指向要分解的字符串，随后调用要把s设成NULL。
        返回值：返回指向下一个标记串的指针；
    
内存操作：
    https://blog.csdn.net/pfgmylove/article/details/3212179
        
        