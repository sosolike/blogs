ES6中字符串的扩展：
    1：ES5中的字符串是无法遍历的，ES6为字符串添加了遍历器接口，使得字符串可以被for...of循环遍历；
        如: for(let code of "foo"){
                console.log().(code)
            }
            //"f","o","o"
    2：增加了对字符串操作的方法：
        includes()   
            :返回布尔值，用于检测目标字符串是否包含子串；
        startWith()  
            :返回布尔值，用于检测子串是否在目标串的头部；
        endWith()    
            :返回布尔值，用于检测子串是否在目标串的尾部；
        repeat()     
            :返回一个新的字符串，表示将原来的字符串重复n次；"x".repeat(3) :"xxx"
            :n如果是小数，将会向下取整；
            :n如果为负数或者Infinity，将会报错；但是如果是0~-1之间的小数则会取整为-0；
            :n如果为NaN，将会是0；
        padStart()
            :使用指定字符串在头部将目标字符串补充至指定长度；
        padEnd()
            :使用指定字符串在尾部将目标字符串补充至指定长度   
            上述两个函数：
                1：如果补充之后的字符串长度超过指定的限制长度将会被截断；
                2：如果省略第二个参数，将会使用空格不补全长度；
        matchALL()
            :返回一个正则表达式在当前字符串中的所有匹配；
     
    3：模板字符串：
        1: 如果在js中输入模板字符串通常需要+号来连接，ES6标准中提供了模板符号`;；
        如：
            let na = 123;
            "asd<a>" + "sd</a>" + na    => `asd<a>sd</a>${na}`
        2：`使用注意事项：
            1: 如果在字符串中需要使用`则需要转义；
            2: `符号中的换行和空格都是会保留的；
            3: 模板中需要使用变量时可以使用${}之中；其中{}内部可以放置任意js表达式、运算、引用对象属性以及调用函数；
            4: 模板字符串还能互相嵌套；
        3：`本质上是函数的调用；
            



        