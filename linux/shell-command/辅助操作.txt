管道命令：|
    管道命令功能：将一个命令输出的内容发送给管道之后的命令进行处理
    管道描述：管道是linux上支持两个进程间单向通信的机制，即：将一个进程的正确的标准输出内容传递给管道之后的另一个进程；
    管道的特征：1：只能由一个进程单向传递给另一个进程；
               2：进程将消息传递给管道之后即结束，不再打印至标准输出；
               3：管道中的消息读取是一次性的，一旦被读取之后就从管道中抛弃；
               4：管道不处理传入消息进程的错误输出；只处理正确的消息输出；
               5：管道的右边必须具备能够接收标准输入流的能力；

重定向命令：> >> <
    >  ：将标准输出以及错误输出内容重定向至其他存储设备(文件等)，是覆盖原内容的操作
    >> ：将标准输出以及错误输出内容重定向至其他存储设备(文件等)，是追加内容的操作
    <  ：将数据来源为标准输入修改成文件或者其他设备的输入；

文本搜索及处理：grep
    grep命令用于对输入的数据流按照指定规则进行过滤搜索并打印至标准输出；

    参数意义：
        -i 忽略字符大小写
        -n 显示结果所在行号
        -c 只显示匹配到的行数
        -o 只显示符合条件的字符串而不是整行
        -v 反向匹配选择
        -e 实现多个选项的匹配，多个选项之间是or的关系
        -l 列出文件内容符合指定样式的文件名称，而不是匹配到的项
        -L 列出文件内容不符合指定的范本样式的文件名称，而不是没有匹配到的项
        -r 递归搜索子目录
        -d 不搜索子目录
    grep 也可以和正则表达式一起使用：
        grep的规则表达式:

        ^  #锚定行的开始 如：'^grep'匹配所有以grep开头的行。    

        $  #锚定行的结束 如：'grep$'匹配所有以grep结尾的行。    

        .  #匹配一个非换行符的字符 如：'gr.p'匹配gr后接一个任意字符，然后是p。    

        *  #匹配零个或多个先前字符 如：'*grep'匹配所有一个或多个空格后紧跟grep的行。    

        .*   #一起用代表任意字符。   

        []   #匹配一个指定范围内的字符，如'[Gg]rep'匹配Grep和grep。    

        [^]  #匹配一个不在指定范围内的字符，如：'[^A-FH-Z]rep'匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。    

        \(..\)  #标记匹配字符，如'\(love\)'，love被标记为1。    

        \<      #锚定单词的开始，如:'\<grep'匹配包含以grep开头的单词的行。    

        \>      #锚定单词的结束，如'grep\>'匹配包含以grep结尾的单词的行。    

        x\{m\}  #重复字符x，m次，如：'0\{5\}'匹配包含5个o的行。    

        x\{m,\}  #重复字符x,至少m次，如：'o\{5,\}'匹配至少有5个o的行。    

        x\{m,n\}  #重复字符x，至少m次，不多于n次，如：'o\{5,10\}'匹配5--10个o的行。   

        \w    #匹配文字和数字字符，也就是[A-Za-z0-9]，如：'G\w*p'匹配以G后跟零个或多个文字或数字字符，然后是p。   

        \W    #\w的反置形式，匹配一个或多个非单词字符，如点号句号等。   

        \b    #单词锁定符，如: '\bgrep\b'只匹配grep。  

